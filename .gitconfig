[user]
    name = babramczyk
    email = bjabramczyk@gmail.com

[alias]
    branch-name = "!git rev-parse --abbrev-ref HEAD"
    st = status
    publish = "!git push -u origin $(git branch-name)"
    unpublish = "!git push origin :$(git branch-name)"
    co = checkout
    cob = checkout -b
    ci = commit
    br = branch
    prune-local = "!git fetch -p && git br -D master && for branch in `git branch -vv | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done"

    # Mark a file as "assume unchanged", which means that Git will treat it
    # as though there are no changes to it even if there are. Useful for
    # temporary changes to tracked files
    assume = update-index --assume-unchanged
    # Reverse the above
    unassume = update-index --no-assume-unchanged
    # Show the files that are currently assume-unchanged
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    
    # Delete the current branch, and checkout the "main" dev branch (currently "dev")
    abandon = "!BRANCH_NAME=$(git branch-name) && git co dev && git br -D $BRANCH_NAME"

# I have no idea what this is or how this got here :)
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
    unstage = reset HEAD
    
[stash]
    # Make 'git stash show <stash>' show the diff the stash would create if applied
    showPatch = true
