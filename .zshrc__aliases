#########
# Aliases
#########

# Dev stuff in repos
format() {
  echo "💅 Formatting files with Prettier...";
  npx prettier --write --loglevel=error .;
  echo "✅ Done formatting";
}
lint() {
  echo "🔎 Linting files with ESLint...";
  npx eslint . --ext js,jsx,ts,tsx;
  echo "✅ Done linting";
}
tc() {
  echo "🧐 Type-checking files with TypeScript...";
  npx tsc --noEmit;
  echo "✅ Done type-checking";
}
jest() {
  echo "🧪 Testing files changed on branch...";
  npx jest --changedSince=$(git_dev_branch) --coverage=false;
  echo "✅ Done testing";
}
jestw() {
  echo "🧪👀 Testing files changed on branch on watch...";
  npx jest --changedSince=$(git_dev_branch) --watch --coverage=false;
  echo "✅ Done testing";
}
jesta() {
  echo "🧪 Testing all files...";
  npx jest --coverage=false;
  echo "✅ Done testing";
}
alias va='tc && test && lint && format'
alias vs='tc && lint && format'

# dotfiles repo
alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'
# Open fzf files with vim by default
alias go="vim -o \`fzf\`"
# Make sure dotfiles are shown by ls
alias ls="ls -A"
# Log ip to console
alias myip="curl http://ipecho.net/plain; echo"
alias gpom="git pull origin \$(git_dev_branch)"
# Change ping to stop after 5 pings
alias ping="ping -c 5"
alias c="clear"

###########
# Functions
###########

# Clears the screen and runs the succeeding command(s)
run() {
  clear;
  eval $@;
}

git_dev_branch() {
  if [[ -n $(git branch --list develop) ]]; then 
    echo develop; 
  else 
    echo master; 
  fi 
}
